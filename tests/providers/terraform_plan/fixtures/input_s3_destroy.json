{
    "format_version": "1.1",
    "terraform_version": "1.2.6",
    "variables": {
        "bucket_region": {
            "value": "eu-central-1"
        },
        "s3_bucket_acl": {
            "value": "public-read"
        },
        "s3_bucket_block_public_acls": {
            "value": false
        },
        "s3_bucket_block_public_policy": {
            "value": false
        },
        "s3_bucket_force_destroy": {
            "value": true
        },
        "s3_bucket_ignore_public_acls": {
            "value": false
        },
        "s3_bucket_restrict_public_buckets": {
            "value": false
        },
        "s3_bucket_tags": {
            "value": {
                "Owner": "stackguardian"
            }
        },
        "s3_bucket_versioning": {
            "value": {
                "enabled": "true",
                "mfa_delete": "false"
            }
        }
    },
    "planned_values": {
        "root_module": {}
    },
    "resource_changes": [
        {
            "address": "module.ec2.aws_instance.this[0]",
            "module_address": "module.ec2",
            "mode": "managed",
            "type": "aws_instance",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "delete"
                ],
                "before": {
                    "ami": "ami-0ad7e15f9249e8d2f",
                    "arn": "arn:aws:ec2:eu-central-1:790543352839:instance/i-0a69c0ca1342b636c",
                    "associate_public_ip_address": false,
                    "availability_zone": "eu-central-1a",
                    "capacity_reservation_specification": [
                        {
                            "capacity_reservation_preference": "open",
                            "capacity_reservation_target": []
                        }
                    ],
                    "cpu_core_count": 1,
                    "cpu_threads_per_core": 2,
                    "credit_specification": [
                        {
                            "cpu_credits": "unlimited"
                        }
                    ],
                    "disable_api_stop": false,
                    "disable_api_termination": false,
                    "ebs_block_device": [],
                    "ebs_optimized": false,
                    "enclave_options": [
                        {
                            "enabled": false
                        }
                    ],
                    "ephemeral_block_device": [],
                    "get_password_data": false,
                    "hibernation": false,
                    "host_id": null,
                    "host_resource_group_arn": null,
                    "iam_instance_profile": "",
                    "id": "i-0a69c0ca1342b636c",
                    "instance_initiated_shutdown_behavior": "stop",
                    "instance_state": "running",
                    "instance_type": "t3.micro",
                    "ipv6_address_count": 0,
                    "ipv6_addresses": [],
                    "key_name": "",
                    "launch_template": [],
                    "maintenance_options": [
                        {
                            "auto_recovery": "default"
                        }
                    ],
                    "metadata_options": [
                        {
                            "http_endpoint": "enabled",
                            "http_put_response_hop_limit": 1,
                            "http_tokens": "optional",
                            "instance_metadata_tags": "disabled"
                        }
                    ],
                    "monitoring": false,
                    "network_interface": [],
                    "outpost_arn": "",
                    "password_data": "",
                    "placement_group": "",
                    "placement_partition_number": null,
                    "primary_network_interface_id": "eni-0fef14b2c7dd7d059",
                    "private_dns": "ip-10-0-0-113.eu-central-1.compute.internal",
                    "private_dns_name_options": [
                        {
                            "enable_resource_name_dns_a_record": false,
                            "enable_resource_name_dns_aaaa_record": false,
                            "hostname_type": "ip-name"
                        }
                    ],
                    "private_ip": "10.0.0.113",
                    "public_dns": "",
                    "public_ip": "",
                    "root_block_device": [
                        {
                            "delete_on_termination": true,
                            "device_name": "/dev/sda1",
                            "encrypted": false,
                            "iops": 192,
                            "kms_key_id": "",
                            "tags": {},
                            "throughput": 0,
                            "volume_id": "vol-0a963ab1b4c6d00ce",
                            "volume_size": 64,
                            "volume_type": "gp2"
                        }
                    ],
                    "secondary_private_ips": [],
                    "security_groups": [],
                    "source_dest_check": true,
                    "subnet_id": "subnet-0adeb216161049cca",
                    "tags": {
                        "Name": "sg-created-test-instance"
                    },
                    "tags_all": {
                        "Name": "sg-created-test-instance"
                    },
                    "tenancy": "default",
                    "timeouts": {
                        "create": null,
                        "delete": null,
                        "update": null
                    },
                    "user_data": null,
                    "user_data_base64": null,
                    "user_data_replace_on_change": false,
                    "volume_tags": {
                        "Name": "sg-created-test-instance"
                    },
                    "vpc_security_group_ids": [
                        "sg-064cbb231ba1bca24"
                    ]
                },
                "after": null,
                "after_unknown": {},
                "before_sensitive": {
                    "capacity_reservation_specification": [
                        {
                            "capacity_reservation_target": []
                        }
                    ],
                    "credit_specification": [
                        {}
                    ],
                    "ebs_block_device": [],
                    "enclave_options": [
                        {}
                    ],
                    "ephemeral_block_device": [],
                    "ipv6_addresses": [],
                    "launch_template": [],
                    "maintenance_options": [
                        {}
                    ],
                    "metadata_options": [
                        {}
                    ],
                    "network_interface": [],
                    "private_dns_name_options": [
                        {}
                    ],
                    "root_block_device": [
                        {
                            "tags": {}
                        }
                    ],
                    "secondary_private_ips": [],
                    "security_groups": [],
                    "tags": {},
                    "tags_all": {},
                    "timeouts": {},
                    "volume_tags": {},
                    "vpc_security_group_ids": [
                        false
                    ]
                },
                "after_sensitive": false
            }
        },
        {
            "address": "module.s3_bucket.aws_s3_bucket.this[0]",
            "module_address": "module.s3_bucket",
            "mode": "managed",
            "type": "aws_s3_bucket",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "delete"
                ],
                "before": {
                    "acceleration_status": "",
                    "acl": "public-read",
                    "arn": "arn:aws:s3:::stackguardian-verified-bluegill",
                    "bucket": "stackguardian-verified-bluegill",
                    "bucket_domain_name": "stackguardian-verified-bluegill.s3.amazonaws.com",
                    "bucket_prefix": null,
                    "bucket_regional_domain_name": "stackguardian-verified-bluegill.s3.eu-central-1.amazonaws.com",
                    "cors_rule": [],
                    "force_destroy": true,
                    "grant": [
                        {
                            "id": "",
                            "permissions": [
                                "READ"
                            ],
                            "type": "Group",
                            "uri": "http://acs.amazonaws.com/groups/global/AllUsers"
                        },
                        {
                            "id": "9384ba540c1093b9523308500d905bb6385ccb904afa22a41b8309ad4cc458ff",
                            "permissions": [
                                "FULL_CONTROL"
                            ],
                            "type": "CanonicalUser",
                            "uri": ""
                        }
                    ],
                    "hosted_zone_id": "Z21DNDUVLTQW6Q",
                    "id": "stackguardian-verified-bluegill",
                    "lifecycle_rule": [],
                    "logging": [],
                    "object_lock_configuration": [],
                    "object_lock_enabled": false,
                    "policy": "",
                    "region": "eu-central-1",
                    "replication_configuration": [],
                    "request_payer": "BucketOwner",
                    "server_side_encryption_configuration": [
                        {
                            "rule": [
                                {
                                    "apply_server_side_encryption_by_default": [
                                        {
                                            "kms_master_key_id": "",
                                            "sse_algorithm": "AES256"
                                        }
                                    ],
                                    "bucket_key_enabled": false
                                }
                            ]
                        }
                    ],
                    "tags": {
                        "Owner": "stackguardian"
                    },
                    "tags_all": {
                        "Owner": "stackguardian"
                    },
                    "timeouts": null,
                    "versioning": [
                        {
                            "enabled": true,
                            "mfa_delete": false
                        }
                    ],
                    "website": [
                        {
                            "error_document": "error.html",
                            "index_document": "index.html",
                            "redirect_all_requests_to": "",
                            "routing_rules": ""
                        }
                    ],
                    "website_domain": "s3-website.eu-central-1.amazonaws.com",
                    "website_endpoint": "stackguardian-verified-bluegill.s3-website.eu-central-1.amazonaws.com"
                },
                "after": null,
                "after_unknown": {},
                "before_sensitive": {
                    "acl": true,
                    "cors_rule": [],
                    "grant": [
                        {
                            "permissions": [
                                false
                            ]
                        },
                        {
                            "permissions": [
                                false
                            ]
                        }
                    ],
                    "lifecycle_rule": [],
                    "logging": [],
                    "object_lock_configuration": [],
                    "replication_configuration": [],
                    "server_side_encryption_configuration": [
                        {
                            "rule": [
                                {
                                    "apply_server_side_encryption_by_default": [
                                        {}
                                    ]
                                }
                            ]
                        }
                    ],
                    "tags": true,
                    "tags_all": {},
                    "versioning": [
                        {}
                    ],
                    "website": [
                        {}
                    ]
                },
                "after_sensitive": false
            }
        },
        {
            "address": "module.s3_bucket.aws_s3_bucket_public_access_block.this[0]",
            "module_address": "module.s3_bucket",
            "mode": "managed",
            "type": "aws_s3_bucket_public_access_block",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "delete"
                ],
                "before": {
                    "block_public_acls": false,
                    "block_public_policy": false,
                    "bucket": "stackguardian-verified-bluegill",
                    "id": "stackguardian-verified-bluegill",
                    "ignore_public_acls": false,
                    "restrict_public_buckets": false
                },
                "after": null,
                "after_unknown": {},
                "before_sensitive": {},
                "after_sensitive": false
            }
        },
        {
            "address": "null_resource.remove_and_upload_to_s3",
            "mode": "managed",
            "type": "null_resource",
            "name": "remove_and_upload_to_s3",
            "provider_name": "registry.terraform.io/hashicorp/null",
            "change": {
                "actions": [
                    "delete"
                ],
                "before": {
                    "id": "5577006791947779410",
                    "triggers": null
                },
                "after": null,
                "after_unknown": {},
                "before_sensitive": {},
                "after_sensitive": false
            }
        },
        {
            "address": "random_pet.this",
            "mode": "managed",
            "type": "random_pet",
            "name": "this",
            "provider_name": "registry.terraform.io/hashicorp/random",
            "change": {
                "actions": [
                    "delete"
                ],
                "before": {
                    "id": "verified-bluegill",
                    "keepers": null,
                    "length": 2,
                    "prefix": null,
                    "separator": "-"
                },
                "after": null,
                "after_unknown": {},
                "before_sensitive": {},
                "after_sensitive": false
            }
        }
    ],
    "output_changes": {
        "sample_website_url": {
            "actions": [
                "delete"
            ],
            "before": "http://stackguardian-verified-bluegill.s3-website.eu-central-1.amazonaws.com",
            "after": null,
            "after_unknown": false,
            "before_sensitive": false,
            "after_sensitive": false
        }
    },
    "prior_state": {
        "format_version": "1.0",
        "terraform_version": "1.2.6",
        "values": {
            "outputs": {
                "sample_website_url": {
                    "sensitive": false,
                    "value": "http://stackguardian-verified-bluegill.s3-website.eu-central-1.amazonaws.com",
                    "type": "string"
                }
            },
            "root_module": {
                "resources": [
                    {
                        "address": "null_resource.remove_and_upload_to_s3",
                        "mode": "managed",
                        "type": "null_resource",
                        "name": "remove_and_upload_to_s3",
                        "provider_name": "registry.terraform.io/hashicorp/null",
                        "schema_version": 0,
                        "values": {
                            "id": "5577006791947779410",
                            "triggers": null
                        },
                        "sensitive_values": {},
                        "depends_on": [
                            "module.s3_bucket.aws_s3_bucket.this",
                            "module.s3_bucket.aws_s3_bucket_policy.this",
                            "module.s3_bucket.data.aws_elb_service_account.this",
                            "module.s3_bucket.data.aws_iam_policy_document.combined",
                            "module.s3_bucket.data.aws_iam_policy_document.deny_insecure_transport",
                            "module.s3_bucket.data.aws_iam_policy_document.elb_log_delivery",
                            "random_pet.this"
                        ]
                    },
                    {
                        "address": "random_pet.this",
                        "mode": "managed",
                        "type": "random_pet",
                        "name": "this",
                        "provider_name": "registry.terraform.io/hashicorp/random",
                        "schema_version": 0,
                        "values": {
                            "id": "verified-bluegill",
                            "keepers": null,
                            "length": 2,
                            "prefix": null,
                            "separator": "-"
                        },
                        "sensitive_values": {}
                    }
                ],
                "child_modules": [
                    {
                        "resources": [
                            {
                                "address": "module.ec2.aws_instance.this[0]",
                                "mode": "managed",
                                "type": "aws_instance",
                                "name": "this",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 1,
                                "values": {
                                    "ami": "ami-0ad7e15f9249e8d2f",
                                    "arn": "arn:aws:ec2:eu-central-1:790543352839:instance/i-0a69c0ca1342b636c",
                                    "associate_public_ip_address": false,
                                    "availability_zone": "eu-central-1a",
                                    "capacity_reservation_specification": [
                                        {
                                            "capacity_reservation_preference": "open",
                                            "capacity_reservation_target": []
                                        }
                                    ],
                                    "cpu_core_count": 1,
                                    "cpu_threads_per_core": 2,
                                    "credit_specification": [
                                        {
                                            "cpu_credits": "unlimited"
                                        }
                                    ],
                                    "disable_api_stop": false,
                                    "disable_api_termination": false,
                                    "ebs_block_device": [],
                                    "ebs_optimized": false,
                                    "enclave_options": [
                                        {
                                            "enabled": false
                                        }
                                    ],
                                    "ephemeral_block_device": [],
                                    "get_password_data": false,
                                    "hibernation": false,
                                    "host_id": null,
                                    "host_resource_group_arn": null,
                                    "iam_instance_profile": "",
                                    "id": "i-0a69c0ca1342b636c",
                                    "instance_initiated_shutdown_behavior": "stop",
                                    "instance_state": "running",
                                    "instance_type": "t3.micro",
                                    "ipv6_address_count": 0,
                                    "ipv6_addresses": [],
                                    "key_name": "",
                                    "launch_template": [],
                                    "maintenance_options": [
                                        {
                                            "auto_recovery": "default"
                                        }
                                    ],
                                    "metadata_options": [
                                        {
                                            "http_endpoint": "enabled",
                                            "http_put_response_hop_limit": 1,
                                            "http_tokens": "optional",
                                            "instance_metadata_tags": "disabled"
                                        }
                                    ],
                                    "monitoring": false,
                                    "network_interface": [],
                                    "outpost_arn": "",
                                    "password_data": "",
                                    "placement_group": "",
                                    "placement_partition_number": null,
                                    "primary_network_interface_id": "eni-0fef14b2c7dd7d059",
                                    "private_dns": "ip-10-0-0-113.eu-central-1.compute.internal",
                                    "private_dns_name_options": [
                                        {
                                            "enable_resource_name_dns_a_record": false,
                                            "enable_resource_name_dns_aaaa_record": false,
                                            "hostname_type": "ip-name"
                                        }
                                    ],
                                    "private_ip": "10.0.0.113",
                                    "public_dns": "",
                                    "public_ip": "",
                                    "root_block_device": [
                                        {
                                            "delete_on_termination": true,
                                            "device_name": "/dev/sda1",
                                            "encrypted": false,
                                            "iops": 192,
                                            "kms_key_id": "",
                                            "tags": {},
                                            "throughput": 0,
                                            "volume_id": "vol-0a963ab1b4c6d00ce",
                                            "volume_size": 64,
                                            "volume_type": "gp2"
                                        }
                                    ],
                                    "secondary_private_ips": [],
                                    "security_groups": [],
                                    "source_dest_check": true,
                                    "subnet_id": "subnet-0adeb216161049cca",
                                    "tags": {
                                        "Name": "sg-created-test-instance"
                                    },
                                    "tags_all": {
                                        "Name": "sg-created-test-instance"
                                    },
                                    "tenancy": "default",
                                    "timeouts": {
                                        "create": null,
                                        "delete": null,
                                        "update": null
                                    },
                                    "user_data": null,
                                    "user_data_base64": null,
                                    "user_data_replace_on_change": false,
                                    "volume_tags": {
                                        "Name": "sg-created-test-instance"
                                    },
                                    "vpc_security_group_ids": [
                                        "sg-064cbb231ba1bca24"
                                    ]
                                },
                                "sensitive_values": {
                                    "capacity_reservation_specification": [
                                        {
                                            "capacity_reservation_target": []
                                        }
                                    ],
                                    "credit_specification": [
                                        {}
                                    ],
                                    "ebs_block_device": [],
                                    "enclave_options": [
                                        {}
                                    ],
                                    "ephemeral_block_device": [],
                                    "ipv6_addresses": [],
                                    "launch_template": [],
                                    "maintenance_options": [
                                        {}
                                    ],
                                    "metadata_options": [
                                        {}
                                    ],
                                    "network_interface": [],
                                    "private_dns_name_options": [
                                        {}
                                    ],
                                    "root_block_device": [
                                        {
                                            "tags": {}
                                        }
                                    ],
                                    "secondary_private_ips": [],
                                    "security_groups": [],
                                    "tags": {},
                                    "tags_all": {},
                                    "timeouts": {},
                                    "volume_tags": {},
                                    "vpc_security_group_ids": [
                                        false
                                    ]
                                }
                            }
                        ],
                        "address": "module.ec2"
                    },
                    {
                        "resources": [
                            {
                                "address": "module.s3_bucket.aws_s3_bucket.this[0]",
                                "mode": "managed",
                                "type": "aws_s3_bucket",
                                "name": "this",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "acceleration_status": "",
                                    "acl": "public-read",
                                    "arn": "arn:aws:s3:::stackguardian-verified-bluegill",
                                    "bucket": "stackguardian-verified-bluegill",
                                    "bucket_domain_name": "stackguardian-verified-bluegill.s3.amazonaws.com",
                                    "bucket_prefix": null,
                                    "bucket_regional_domain_name": "stackguardian-verified-bluegill.s3.eu-central-1.amazonaws.com",
                                    "cors_rule": [],
                                    "force_destroy": true,
                                    "grant": [
                                        {
                                            "id": "",
                                            "permissions": [
                                                "READ"
                                            ],
                                            "type": "Group",
                                            "uri": "http://acs.amazonaws.com/groups/global/AllUsers"
                                        },
                                        {
                                            "id": "9384ba540c1093b9523308500d905bb6385ccb904afa22a41b8309ad4cc458ff",
                                            "permissions": [
                                                "FULL_CONTROL"
                                            ],
                                            "type": "CanonicalUser",
                                            "uri": ""
                                        }
                                    ],
                                    "hosted_zone_id": "Z21DNDUVLTQW6Q",
                                    "id": "stackguardian-verified-bluegill",
                                    "lifecycle_rule": [],
                                    "logging": [],
                                    "object_lock_configuration": [],
                                    "object_lock_enabled": false,
                                    "policy": "",
                                    "region": "eu-central-1",
                                    "replication_configuration": [],
                                    "request_payer": "BucketOwner",
                                    "server_side_encryption_configuration": [
                                        {
                                            "rule": [
                                                {
                                                    "apply_server_side_encryption_by_default": [
                                                        {
                                                            "kms_master_key_id": "",
                                                            "sse_algorithm": "AES256"
                                                        }
                                                    ],
                                                    "bucket_key_enabled": false
                                                }
                                            ]
                                        }
                                    ],
                                    "tags": {
                                        "Owner": "stackguardian"
                                    },
                                    "tags_all": {
                                        "Owner": "stackguardian"
                                    },
                                    "timeouts": null,
                                    "versioning": [
                                        {
                                            "enabled": true,
                                            "mfa_delete": false
                                        }
                                    ],
                                    "website": [
                                        {
                                            "error_document": "error.html",
                                            "index_document": "index.html",
                                            "redirect_all_requests_to": "",
                                            "routing_rules": ""
                                        }
                                    ],
                                    "website_domain": "s3-website.eu-central-1.amazonaws.com",
                                    "website_endpoint": "stackguardian-verified-bluegill.s3-website.eu-central-1.amazonaws.com"
                                },
                                "sensitive_values": {
                                    "acl": true,
                                    "cors_rule": [],
                                    "grant": [
                                        {
                                            "permissions": [
                                                false
                                            ]
                                        },
                                        {
                                            "permissions": [
                                                false
                                            ]
                                        }
                                    ],
                                    "lifecycle_rule": [],
                                    "logging": [],
                                    "object_lock_configuration": [],
                                    "replication_configuration": [],
                                    "server_side_encryption_configuration": [
                                        {
                                            "rule": [
                                                {
                                                    "apply_server_side_encryption_by_default": [
                                                        {}
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "tags": true,
                                    "tags_all": {},
                                    "versioning": [
                                        {}
                                    ],
                                    "website": [
                                        {}
                                    ]
                                },
                                "depends_on": [
                                    "random_pet.this"
                                ]
                            },
                            {
                                "address": "module.s3_bucket.aws_s3_bucket_public_access_block.this[0]",
                                "mode": "managed",
                                "type": "aws_s3_bucket_public_access_block",
                                "name": "this",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "block_public_acls": false,
                                    "block_public_policy": false,
                                    "bucket": "stackguardian-verified-bluegill",
                                    "id": "stackguardian-verified-bluegill",
                                    "ignore_public_acls": false,
                                    "restrict_public_buckets": false
                                },
                                "sensitive_values": {},
                                "depends_on": [
                                    "module.s3_bucket.aws_s3_bucket.this",
                                    "module.s3_bucket.aws_s3_bucket_policy.this",
                                    "module.s3_bucket.data.aws_elb_service_account.this",
                                    "module.s3_bucket.data.aws_iam_policy_document.combined",
                                    "module.s3_bucket.data.aws_iam_policy_document.deny_insecure_transport",
                                    "module.s3_bucket.data.aws_iam_policy_document.elb_log_delivery",
                                    "random_pet.this"
                                ]
                            }
                        ],
                        "address": "module.s3_bucket"
                    }
                ]
            }
        }
    },
    "configuration": {
        "provider_config": {
            "aws": {
                "name": "aws",
                "full_name": "registry.terraform.io/hashicorp/aws",
                "expressions": {
                    "region": {
                        "references": [
                            "var.bucket_region"
                        ]
                    },
                    "skip_metadata_api_check": {
                        "constant_value": true
                    }
                }
            },
            "null": {
                "name": "null",
                "full_name": "registry.terraform.io/hashicorp/null"
            },
            "random": {
                "name": "random",
                "full_name": "registry.terraform.io/hashicorp/random"
            }
        },
        "root_module": {
            "outputs": {
                "sample_website_url": {
                    "expression": {
                        "references": [
                            "module.s3_bucket.s3_bucket_website_endpoint",
                            "module.s3_bucket"
                        ]
                    },
                    "description": "The sample website url"
                }
            },
            "resources": [
                {
                    "address": "null_resource.remove_and_upload_to_s3",
                    "mode": "managed",
                    "type": "null_resource",
                    "name": "remove_and_upload_to_s3",
                    "provider_config_key": "null",
                    "provisioners": [
                        {
                            "type": "local-exec",
                            "expressions": {
                                "command": {
                                    "references": [
                                        "path.module",
                                        "module.s3_bucket.s3_bucket_id",
                                        "module.s3_bucket"
                                    ]
                                }
                            }
                        }
                    ],
                    "schema_version": 0
                },
                {
                    "address": "random_pet.this",
                    "mode": "managed",
                    "type": "random_pet",
                    "name": "this",
                    "provider_config_key": "random",
                    "expressions": {
                        "length": {
                            "constant_value": 2
                        }
                    },
                    "schema_version": 0
                }
            ],
            "module_calls": {
                "ec2": {
                    "source": "github.com/StackGuardian/terraform-aws-ec2-instance",
                    "expressions": {
                        "ami": {
                            "constant_value": "ami-0ad7e15f9249e8d2f"
                        },
                        "instance_type": {
                            "constant_value": "t3.micro"
                        },
                        "name": {
                            "constant_value": "sg-created-test-instance"
                        },
                        "subnet_id": {
                            "constant_value": "subnet-0adeb216161049cca"
                        }
                    },
                    "module": {
                        "outputs": {
                            "arn": {
                                "expression": {
                                    "references": [
                                        "aws_instance.this[0].arn",
                                        "aws_instance.this[0]",
                                        "aws_instance.this",
                                        "aws_spot_instance_request.this[0].arn",
                                        "aws_spot_instance_request.this[0]",
                                        "aws_spot_instance_request.this"
                                    ]
                                },
                                "description": "The ARN of the instance"
                            },
                            "capacity_reservation_specification": {
                                "expression": {
                                    "references": [
                                        "aws_instance.this[0].capacity_reservation_specification",
                                        "aws_instance.this[0]",
                                        "aws_instance.this",
                                        "aws_spot_instance_request.this[0].capacity_reservation_specification",
                                        "aws_spot_instance_request.this[0]",
                                        "aws_spot_instance_request.this"
                                    ]
                                },
                                "description": "Capacity reservation specification of the instance"
                            },
                            "id": {
                                "expression": {
                                    "references": [
                                        "aws_instance.this[0].id",
                                        "aws_instance.this[0]",
                                        "aws_instance.this",
                                        "aws_spot_instance_request.this[0].id",
                                        "aws_spot_instance_request.this[0]",
                                        "aws_spot_instance_request.this"
                                    ]
                                },
                                "description": "The ID of the instance"
                            },
                            "instance_state": {
                                "expression": {
                                    "references": [
                                        "aws_instance.this[0].instance_state",
                                        "aws_instance.this[0]",
                                        "aws_instance.this",
                                        "aws_spot_instance_request.this[0].instance_state",
                                        "aws_spot_instance_request.this[0]",
                                        "aws_spot_instance_request.this"
                                    ]
                                },
                                "description": "The state of the instance. One of: `pending`, `running`, `shutting-down`, `terminated`, `stopping`, `stopped`"
                            },
                            "ipv6_addresses": {
                                "expression": {
                                    "references": [
                                        "aws_instance.this[0].ipv6_addresses",
                                        "aws_instance.this[0]",
                                        "aws_instance.this"
                                    ]
                                },
                                "description": "The IPv6 address assigned to the instance, if applicable."
                            },
                            "outpost_arn": {
                                "expression": {
                                    "references": [
                                        "aws_instance.this[0].outpost_arn",
                                        "aws_instance.this[0]",
                                        "aws_instance.this",
                                        "aws_spot_instance_request.this[0].outpost_arn",
                                        "aws_spot_instance_request.this[0]",
                                        "aws_spot_instance_request.this"
                                    ]
                                },
                                "description": "The ARN of the Outpost the instance is assigned to"
                            },
                            "password_data": {
                                "expression": {
                                    "references": [
                                        "aws_instance.this[0].password_data",
                                        "aws_instance.this[0]",
                                        "aws_instance.this",
                                        "aws_spot_instance_request.this[0].password_data",
                                        "aws_spot_instance_request.this[0]",
                                        "aws_spot_instance_request.this"
                                    ]
                                },
                                "description": "Base-64 encoded encrypted password data for the instance. Useful for getting the administrator password for instances running Microsoft Windows. This attribute is only exported if `get_password_data` is true"
                            },
                            "primary_network_interface_id": {
                                "expression": {
                                    "references": [
                                        "aws_instance.this[0].primary_network_interface_id",
                                        "aws_instance.this[0]",
                                        "aws_instance.this",
                                        "aws_spot_instance_request.this[0].primary_network_interface_id",
                                        "aws_spot_instance_request.this[0]",
                                        "aws_spot_instance_request.this"
                                    ]
                                },
                                "description": "The ID of the instance's primary network interface"
                            },
                            "private_dns": {
                                "expression": {
                                    "references": [
                                        "aws_instance.this[0].private_dns",
                                        "aws_instance.this[0]",
                                        "aws_instance.this",
                                        "aws_spot_instance_request.this[0].private_dns",
                                        "aws_spot_instance_request.this[0]",
                                        "aws_spot_instance_request.this"
                                    ]
                                },
                                "description": "The private DNS name assigned to the instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC"
                            },
                            "private_ip": {
                                "expression": {
                                    "references": [
                                        "aws_instance.this[0].private_ip",
                                        "aws_instance.this[0]",
                                        "aws_instance.this",
                                        "aws_spot_instance_request.this[0].private_ip",
                                        "aws_spot_instance_request.this[0]",
                                        "aws_spot_instance_request.this"
                                    ]
                                },
                                "description": "The private IP address assigned to the instance."
                            },
                            "public_dns": {
                                "expression": {
                                    "references": [
                                        "aws_instance.this[0].public_dns",
                                        "aws_instance.this[0]",
                                        "aws_instance.this",
                                        "aws_spot_instance_request.this[0].public_dns",
                                        "aws_spot_instance_request.this[0]",
                                        "aws_spot_instance_request.this"
                                    ]
                                },
                                "description": "The public DNS name assigned to the instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC"
                            },
                            "public_ip": {
                                "expression": {
                                    "references": [
                                        "aws_instance.this[0].public_ip",
                                        "aws_instance.this[0]",
                                        "aws_instance.this",
                                        "aws_spot_instance_request.this[0].public_ip",
                                        "aws_spot_instance_request.this[0]",
                                        "aws_spot_instance_request.this"
                                    ]
                                },
                                "description": "The public IP address assigned to the instance, if applicable. NOTE: If you are using an aws_eip with your instance, you should refer to the EIP's address directly and not use `public_ip` as this field will change after the EIP is attached"
                            },
                            "spot_bid_status": {
                                "expression": {
                                    "references": [
                                        "aws_spot_instance_request.this[0].spot_bid_status",
                                        "aws_spot_instance_request.this[0]",
                                        "aws_spot_instance_request.this"
                                    ]
                                },
                                "description": "The current bid status of the Spot Instance Request"
                            },
                            "spot_instance_id": {
                                "expression": {
                                    "references": [
                                        "aws_spot_instance_request.this[0].spot_instance_id",
                                        "aws_spot_instance_request.this[0]",
                                        "aws_spot_instance_request.this"
                                    ]
                                },
                                "description": "The Instance ID (if any) that is currently fulfilling the Spot Instance request"
                            },
                            "spot_request_state": {
                                "expression": {
                                    "references": [
                                        "aws_spot_instance_request.this[0].spot_request_state",
                                        "aws_spot_instance_request.this[0]",
                                        "aws_spot_instance_request.this"
                                    ]
                                },
                                "description": "The current request state of the Spot Instance Request"
                            },
                            "tags_all": {
                                "expression": {
                                    "references": [
                                        "aws_instance.this[0].tags_all",
                                        "aws_instance.this[0]",
                                        "aws_instance.this",
                                        "aws_spot_instance_request.this[0].tags_all",
                                        "aws_spot_instance_request.this[0]",
                                        "aws_spot_instance_request.this"
                                    ]
                                },
                                "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block"
                            }
                        },
                        "resources": [
                            {
                                "address": "aws_instance.this",
                                "mode": "managed",
                                "type": "aws_instance",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "ami": {
                                        "references": [
                                            "var.ami"
                                        ]
                                    },
                                    "associate_public_ip_address": {
                                        "references": [
                                            "var.associate_public_ip_address"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.availability_zone"
                                        ]
                                    },
                                    "cpu_core_count": {
                                        "references": [
                                            "var.cpu_core_count"
                                        ]
                                    },
                                    "cpu_threads_per_core": {
                                        "references": [
                                            "var.cpu_threads_per_core"
                                        ]
                                    },
                                    "credit_specification": [
                                        {
                                            "cpu_credits": {
                                                "references": [
                                                    "local.is_t_instance_type",
                                                    "var.cpu_credits"
                                                ]
                                            }
                                        }
                                    ],
                                    "disable_api_termination": {
                                        "references": [
                                            "var.disable_api_termination"
                                        ]
                                    },
                                    "ebs_optimized": {
                                        "references": [
                                            "var.ebs_optimized"
                                        ]
                                    },
                                    "enclave_options": [
                                        {
                                            "enabled": {
                                                "references": [
                                                    "var.enclave_options_enabled"
                                                ]
                                            }
                                        }
                                    ],
                                    "get_password_data": {
                                        "references": [
                                            "var.get_password_data"
                                        ]
                                    },
                                    "hibernation": {
                                        "references": [
                                            "var.hibernation"
                                        ]
                                    },
                                    "host_id": {
                                        "references": [
                                            "var.host_id"
                                        ]
                                    },
                                    "iam_instance_profile": {
                                        "references": [
                                            "var.iam_instance_profile"
                                        ]
                                    },
                                    "instance_initiated_shutdown_behavior": {
                                        "references": [
                                            "var.instance_initiated_shutdown_behavior"
                                        ]
                                    },
                                    "instance_type": {
                                        "references": [
                                            "var.instance_type"
                                        ]
                                    },
                                    "ipv6_address_count": {
                                        "references": [
                                            "var.ipv6_address_count"
                                        ]
                                    },
                                    "ipv6_addresses": {
                                        "references": [
                                            "var.ipv6_addresses"
                                        ]
                                    },
                                    "key_name": {
                                        "references": [
                                            "var.key_name"
                                        ]
                                    },
                                    "monitoring": {
                                        "references": [
                                            "var.monitoring"
                                        ]
                                    },
                                    "placement_group": {
                                        "references": [
                                            "var.placement_group"
                                        ]
                                    },
                                    "private_ip": {
                                        "references": [
                                            "var.private_ip"
                                        ]
                                    },
                                    "secondary_private_ips": {
                                        "references": [
                                            "var.secondary_private_ips"
                                        ]
                                    },
                                    "source_dest_check": {
                                        "references": [
                                            "var.network_interface",
                                            "var.source_dest_check"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "var.subnet_id"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.tags"
                                        ]
                                    },
                                    "tenancy": {
                                        "references": [
                                            "var.tenancy"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "references": [
                                                "var.timeouts"
                                            ]
                                        },
                                        "delete": {
                                            "references": [
                                                "var.timeouts"
                                            ]
                                        },
                                        "update": {
                                            "references": [
                                                "var.timeouts"
                                            ]
                                        }
                                    },
                                    "user_data": {
                                        "references": [
                                            "var.user_data"
                                        ]
                                    },
                                    "user_data_base64": {
                                        "references": [
                                            "var.user_data_base64"
                                        ]
                                    },
                                    "volume_tags": {
                                        "references": [
                                            "var.enable_volume_tags",
                                            "var.name",
                                            "var.volume_tags"
                                        ]
                                    },
                                    "vpc_security_group_ids": {
                                        "references": [
                                            "var.vpc_security_group_ids"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "var.create",
                                        "var.create_spot_instance"
                                    ]
                                }
                            },
                            {
                                "address": "aws_spot_instance_request.this",
                                "mode": "managed",
                                "type": "aws_spot_instance_request",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "ami": {
                                        "references": [
                                            "var.ami"
                                        ]
                                    },
                                    "associate_public_ip_address": {
                                        "references": [
                                            "var.associate_public_ip_address"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.availability_zone"
                                        ]
                                    },
                                    "block_duration_minutes": {
                                        "references": [
                                            "var.spot_block_duration_minutes"
                                        ]
                                    },
                                    "cpu_core_count": {
                                        "references": [
                                            "var.cpu_core_count"
                                        ]
                                    },
                                    "cpu_threads_per_core": {
                                        "references": [
                                            "var.cpu_threads_per_core"
                                        ]
                                    },
                                    "credit_specification": [
                                        {
                                            "cpu_credits": {
                                                "references": [
                                                    "local.is_t_instance_type",
                                                    "var.cpu_credits"
                                                ]
                                            }
                                        }
                                    ],
                                    "disable_api_termination": {
                                        "references": [
                                            "var.disable_api_termination"
                                        ]
                                    },
                                    "ebs_optimized": {
                                        "references": [
                                            "var.ebs_optimized"
                                        ]
                                    },
                                    "enclave_options": [
                                        {
                                            "enabled": {
                                                "references": [
                                                    "var.enclave_options_enabled"
                                                ]
                                            }
                                        }
                                    ],
                                    "get_password_data": {
                                        "references": [
                                            "var.get_password_data"
                                        ]
                                    },
                                    "hibernation": {
                                        "references": [
                                            "var.hibernation"
                                        ]
                                    },
                                    "host_id": {
                                        "references": [
                                            "var.host_id"
                                        ]
                                    },
                                    "iam_instance_profile": {
                                        "references": [
                                            "var.iam_instance_profile"
                                        ]
                                    },
                                    "instance_initiated_shutdown_behavior": {
                                        "references": [
                                            "var.instance_initiated_shutdown_behavior"
                                        ]
                                    },
                                    "instance_interruption_behavior": {
                                        "references": [
                                            "var.spot_instance_interruption_behavior"
                                        ]
                                    },
                                    "instance_type": {
                                        "references": [
                                            "var.instance_type"
                                        ]
                                    },
                                    "ipv6_address_count": {
                                        "references": [
                                            "var.ipv6_address_count"
                                        ]
                                    },
                                    "ipv6_addresses": {
                                        "references": [
                                            "var.ipv6_addresses"
                                        ]
                                    },
                                    "key_name": {
                                        "references": [
                                            "var.key_name"
                                        ]
                                    },
                                    "launch_group": {
                                        "references": [
                                            "var.spot_launch_group"
                                        ]
                                    },
                                    "monitoring": {
                                        "references": [
                                            "var.monitoring"
                                        ]
                                    },
                                    "placement_group": {
                                        "references": [
                                            "var.placement_group"
                                        ]
                                    },
                                    "private_ip": {
                                        "references": [
                                            "var.private_ip"
                                        ]
                                    },
                                    "secondary_private_ips": {
                                        "references": [
                                            "var.secondary_private_ips"
                                        ]
                                    },
                                    "source_dest_check": {
                                        "references": [
                                            "var.network_interface",
                                            "var.source_dest_check"
                                        ]
                                    },
                                    "spot_price": {
                                        "references": [
                                            "var.spot_price"
                                        ]
                                    },
                                    "spot_type": {
                                        "references": [
                                            "var.spot_type"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "var.subnet_id"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.tags"
                                        ]
                                    },
                                    "tenancy": {
                                        "references": [
                                            "var.tenancy"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "references": [
                                                "var.timeouts"
                                            ]
                                        },
                                        "delete": {
                                            "references": [
                                                "var.timeouts"
                                            ]
                                        }
                                    },
                                    "user_data": {
                                        "references": [
                                            "var.user_data"
                                        ]
                                    },
                                    "user_data_base64": {
                                        "references": [
                                            "var.user_data_base64"
                                        ]
                                    },
                                    "valid_from": {
                                        "references": [
                                            "var.spot_valid_from"
                                        ]
                                    },
                                    "valid_until": {
                                        "references": [
                                            "var.spot_valid_until"
                                        ]
                                    },
                                    "volume_tags": {
                                        "references": [
                                            "var.enable_volume_tags",
                                            "var.name",
                                            "var.volume_tags"
                                        ]
                                    },
                                    "vpc_security_group_ids": {
                                        "references": [
                                            "var.vpc_security_group_ids"
                                        ]
                                    },
                                    "wait_for_fulfillment": {
                                        "references": [
                                            "var.spot_wait_for_fulfillment"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create",
                                        "var.create_spot_instance"
                                    ]
                                }
                            }
                        ],
                        "variables": {
                            "ami": {
                                "default": "",
                                "description": "ID of AMI to use for the instance"
                            },
                            "associate_public_ip_address": {
                                "default": null,
                                "description": "Whether to associate a public IP address with an instance in a VPC"
                            },
                            "availability_zone": {
                                "default": null,
                                "description": "AZ to start the instance in"
                            },
                            "capacity_reservation_specification": {
                                "default": null,
                                "description": "Describes an instance's Capacity Reservation targeting option"
                            },
                            "cpu_core_count": {
                                "default": null,
                                "description": "Sets the number of CPU cores for an instance."
                            },
                            "cpu_credits": {
                                "default": null,
                                "description": "The credit option for CPU usage (unlimited or standard)"
                            },
                            "cpu_threads_per_core": {
                                "default": null,
                                "description": "Sets the number of CPU threads per core for an instance (has no effect unless cpu_core_count is also set)."
                            },
                            "create": {
                                "default": true,
                                "description": "Whether to create an instance"
                            },
                            "create_spot_instance": {
                                "default": false,
                                "description": "Depicts if the instance is a spot instance"
                            },
                            "disable_api_termination": {
                                "default": null,
                                "description": "If true, enables EC2 Instance Termination Protection"
                            },
                            "ebs_block_device": {
                                "default": [],
                                "description": "Additional EBS block devices to attach to the instance"
                            },
                            "ebs_optimized": {
                                "default": null,
                                "description": "If true, the launched EC2 instance will be EBS-optimized"
                            },
                            "enable_volume_tags": {
                                "default": true,
                                "description": "Whether to enable volume tags (if enabled it conflicts with root_block_device tags)"
                            },
                            "enclave_options_enabled": {
                                "default": null,
                                "description": "Whether Nitro Enclaves will be enabled on the instance. Defaults to `false`"
                            },
                            "ephemeral_block_device": {
                                "default": [],
                                "description": "Customize Ephemeral (also known as Instance Store) volumes on the instance"
                            },
                            "get_password_data": {
                                "default": null,
                                "description": "If true, wait for password data to become available and retrieve it."
                            },
                            "hibernation": {
                                "default": null,
                                "description": "If true, the launched EC2 instance will support hibernation"
                            },
                            "host_id": {
                                "default": null,
                                "description": "ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host"
                            },
                            "iam_instance_profile": {
                                "default": null,
                                "description": "IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile"
                            },
                            "instance_initiated_shutdown_behavior": {
                                "default": null,
                                "description": "Shutdown behavior for the instance. Amazon defaults this to stop for EBS-backed instances and terminate for instance-store instances. Cannot be set on instance-store instance"
                            },
                            "instance_type": {
                                "default": "t3.micro",
                                "description": "The type of instance to start"
                            },
                            "ipv6_address_count": {
                                "default": null,
                                "description": "A number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet"
                            },
                            "ipv6_addresses": {
                                "default": null,
                                "description": "Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface"
                            },
                            "key_name": {
                                "default": null,
                                "description": "Key name of the Key Pair to use for the instance; which can be managed using the `aws_key_pair` resource"
                            },
                            "launch_template": {
                                "default": null,
                                "description": "Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template"
                            },
                            "metadata_options": {
                                "default": {},
                                "description": "Customize the metadata options of the instance"
                            },
                            "monitoring": {
                                "default": false,
                                "description": "If true, the launched EC2 instance will have detailed monitoring enabled"
                            },
                            "name": {
                                "default": "",
                                "description": "Name to be used on EC2 instance created"
                            },
                            "network_interface": {
                                "default": [],
                                "description": "Customize network interfaces to be attached at instance boot time"
                            },
                            "placement_group": {
                                "default": null,
                                "description": "The Placement Group to start the instance in"
                            },
                            "private_ip": {
                                "default": null,
                                "description": "Private IP address to associate with the instance in a VPC"
                            },
                            "root_block_device": {
                                "default": [],
                                "description": "Customize details about the root block device of the instance. See Block Devices below for details"
                            },
                            "secondary_private_ips": {
                                "default": null,
                                "description": "A list of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e. referenced in a `network_interface block`"
                            },
                            "source_dest_check": {
                                "default": true,
                                "description": "Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs."
                            },
                            "spot_block_duration_minutes": {
                                "default": null,
                                "description": "The required duration for the Spot instances, in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360)"
                            },
                            "spot_instance_interruption_behavior": {
                                "default": null,
                                "description": "Indicates Spot instance behavior when it is interrupted. Valid values are `terminate`, `stop`, or `hibernate`"
                            },
                            "spot_launch_group": {
                                "default": null,
                                "description": "A launch group is a group of spot instances that launch together and terminate together. If left empty instances are launched and terminated individually"
                            },
                            "spot_price": {
                                "default": null,
                                "description": "The maximum price to request on the spot market. Defaults to on-demand price"
                            },
                            "spot_type": {
                                "default": null,
                                "description": "If set to one-time, after the instance is terminated, the spot request will be closed. Default `persistent`"
                            },
                            "spot_valid_from": {
                                "default": null,
                                "description": "The start date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ)"
                            },
                            "spot_valid_until": {
                                "default": null,
                                "description": "The end date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ)"
                            },
                            "spot_wait_for_fulfillment": {
                                "default": null,
                                "description": "If set, Terraform will wait for the Spot Request to be fulfilled, and will throw an error if the timeout of 10m is reached"
                            },
                            "subnet_id": {
                                "default": null,
                                "description": "The VPC Subnet ID to launch in"
                            },
                            "tags": {
                                "default": {},
                                "description": "A mapping of tags to assign to the resource"
                            },
                            "tenancy": {
                                "default": null,
                                "description": "The tenancy of the instance (if the instance is running in a VPC). Available values: default, dedicated, host."
                            },
                            "timeouts": {
                                "default": {},
                                "description": "Define maximum timeout for creating, updating, and deleting EC2 instance resources"
                            },
                            "user_data": {
                                "default": null,
                                "description": "The user data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see user_data_base64 instead."
                            },
                            "user_data_base64": {
                                "default": null,
                                "description": "Can be used instead of user_data to pass base64-encoded binary data directly. Use this instead of user_data whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption."
                            },
                            "volume_tags": {
                                "default": {},
                                "description": "A mapping of tags to assign to the devices created by the instance at launch time"
                            },
                            "vpc_security_group_ids": {
                                "default": null,
                                "description": "A list of security group IDs to associate with"
                            }
                        }
                    }
                },
                "s3_bucket": {
                    "source": "github.com/StackGuardian/module-tf-aws-s3-bucket?ref=v2.0.0",
                    "expressions": {
                        "acl": {
                            "references": [
                                "var.s3_bucket_acl"
                            ]
                        },
                        "block_public_acls": {
                            "references": [
                                "var.s3_bucket_block_public_acls"
                            ]
                        },
                        "block_public_policy": {
                            "references": [
                                "var.s3_bucket_block_public_policy"
                            ]
                        },
                        "bucket": {
                            "references": [
                                "local.bucket_name"
                            ]
                        },
                        "force_destroy": {
                            "references": [
                                "var.s3_bucket_force_destroy"
                            ]
                        },
                        "ignore_public_acls": {
                            "references": [
                                "var.s3_bucket_ignore_public_acls"
                            ]
                        },
                        "restrict_public_buckets": {
                            "references": [
                                "var.s3_bucket_restrict_public_buckets"
                            ]
                        },
                        "tags": {
                            "references": [
                                "var.s3_bucket_tags"
                            ]
                        },
                        "versioning": {
                            "references": [
                                "var.s3_bucket_versioning"
                            ]
                        },
                        "website": {
                            "constant_value": {
                                "error_document": "error.html",
                                "index_document": "index.html"
                            }
                        }
                    },
                    "module": {
                        "outputs": {
                            "s3_bucket_arn": {
                                "expression": {
                                    "references": [
                                        "aws_s3_bucket.this"
                                    ]
                                },
                                "description": "The ARN of the bucket. Will be of format arn:aws:s3:::bucketname."
                            },
                            "s3_bucket_bucket_domain_name": {
                                "expression": {
                                    "references": [
                                        "aws_s3_bucket.this"
                                    ]
                                },
                                "description": "The bucket domain name. Will be of format bucketname.s3.amazonaws.com."
                            },
                            "s3_bucket_bucket_regional_domain_name": {
                                "expression": {
                                    "references": [
                                        "aws_s3_bucket.this"
                                    ]
                                },
                                "description": "The bucket region-specific domain name. The bucket domain name including the region name, please refer here for format. Note: The AWS CloudFront allows specifying S3 region-specific endpoint when creating S3 origin, it will prevent redirect issues from CloudFront to S3 Origin URL."
                            },
                            "s3_bucket_hosted_zone_id": {
                                "expression": {
                                    "references": [
                                        "aws_s3_bucket.this"
                                    ]
                                },
                                "description": "The Route 53 Hosted Zone ID for this bucket's region."
                            },
                            "s3_bucket_id": {
                                "expression": {
                                    "references": [
                                        "aws_s3_bucket_policy.this",
                                        "aws_s3_bucket.this"
                                    ]
                                },
                                "description": "The name of the bucket."
                            },
                            "s3_bucket_region": {
                                "expression": {
                                    "references": [
                                        "aws_s3_bucket.this"
                                    ]
                                },
                                "description": "The AWS region this bucket resides in."
                            },
                            "s3_bucket_website_domain": {
                                "expression": {
                                    "references": [
                                        "aws_s3_bucket.this"
                                    ]
                                },
                                "description": "The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string. This is used to create Route 53 alias records. "
                            },
                            "s3_bucket_website_endpoint": {
                                "expression": {
                                    "references": [
                                        "aws_s3_bucket.this"
                                    ]
                                },
                                "description": "The website endpoint, if the bucket is configured with a website. If not, this will be an empty string."
                            }
                        },
                        "resources": [
                            {
                                "address": "aws_s3_bucket.this",
                                "mode": "managed",
                                "type": "aws_s3_bucket",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "acceleration_status": {
                                        "references": [
                                            "var.acceleration_status"
                                        ]
                                    },
                                    "acl": {
                                        "references": [
                                            "var.acl",
                                            "var.acl"
                                        ]
                                    },
                                    "bucket": {
                                        "references": [
                                            "var.bucket"
                                        ]
                                    },
                                    "bucket_prefix": {
                                        "references": [
                                            "var.bucket_prefix"
                                        ]
                                    },
                                    "force_destroy": {
                                        "references": [
                                            "var.force_destroy"
                                        ]
                                    },
                                    "request_payer": {
                                        "references": [
                                            "var.request_payer"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_bucket"
                                    ]
                                }
                            },
                            {
                                "address": "aws_s3_bucket_policy.this",
                                "mode": "managed",
                                "type": "aws_s3_bucket_policy",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "bucket": {
                                        "references": [
                                            "aws_s3_bucket.this[0].id",
                                            "aws_s3_bucket.this[0]",
                                            "aws_s3_bucket.this"
                                        ]
                                    },
                                    "policy": {
                                        "references": [
                                            "data.aws_iam_policy_document.combined[0].json",
                                            "data.aws_iam_policy_document.combined[0]",
                                            "data.aws_iam_policy_document.combined"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_bucket",
                                        "local.attach_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_s3_bucket_public_access_block.this",
                                "mode": "managed",
                                "type": "aws_s3_bucket_public_access_block",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "block_public_acls": {
                                        "references": [
                                            "var.block_public_acls"
                                        ]
                                    },
                                    "block_public_policy": {
                                        "references": [
                                            "var.block_public_policy"
                                        ]
                                    },
                                    "bucket": {
                                        "references": [
                                            "local.attach_policy",
                                            "aws_s3_bucket_policy.this[0].id",
                                            "aws_s3_bucket_policy.this[0]",
                                            "aws_s3_bucket_policy.this",
                                            "aws_s3_bucket.this[0].id",
                                            "aws_s3_bucket.this[0]",
                                            "aws_s3_bucket.this"
                                        ]
                                    },
                                    "ignore_public_acls": {
                                        "references": [
                                            "var.ignore_public_acls"
                                        ]
                                    },
                                    "restrict_public_buckets": {
                                        "references": [
                                            "var.restrict_public_buckets"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_bucket",
                                        "var.attach_public_policy"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_elb_service_account.this",
                                "mode": "data",
                                "type": "aws_elb_service_account",
                                "name": "this",
                                "provider_config_key": "aws",
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_bucket",
                                        "var.attach_elb_log_delivery_policy"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.combined",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "combined",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "source_policy_documents": {
                                        "references": [
                                            "var.attach_elb_log_delivery_policy",
                                            "data.aws_iam_policy_document.elb_log_delivery[0].json",
                                            "data.aws_iam_policy_document.elb_log_delivery[0]",
                                            "data.aws_iam_policy_document.elb_log_delivery",
                                            "var.attach_deny_insecure_transport_policy",
                                            "data.aws_iam_policy_document.deny_insecure_transport[0].json",
                                            "data.aws_iam_policy_document.deny_insecure_transport[0]",
                                            "data.aws_iam_policy_document.deny_insecure_transport",
                                            "var.attach_policy",
                                            "var.policy"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_bucket",
                                        "local.attach_policy"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.deny_insecure_transport",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "deny_insecure_transport",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "statement": [
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "s3:*"
                                                ]
                                            },
                                            "condition": [
                                                {
                                                    "test": {
                                                        "constant_value": "Bool"
                                                    },
                                                    "values": {
                                                        "constant_value": [
                                                            "false"
                                                        ]
                                                    },
                                                    "variable": {
                                                        "constant_value": "aws:SecureTransport"
                                                    }
                                                }
                                            ],
                                            "effect": {
                                                "constant_value": "Deny"
                                            },
                                            "principals": [
                                                {
                                                    "identifiers": {
                                                        "constant_value": [
                                                            "*"
                                                        ]
                                                    },
                                                    "type": {
                                                        "constant_value": "*"
                                                    }
                                                }
                                            ],
                                            "resources": {
                                                "references": [
                                                    "aws_s3_bucket.this[0].arn",
                                                    "aws_s3_bucket.this[0]",
                                                    "aws_s3_bucket.this",
                                                    "aws_s3_bucket.this[0].arn",
                                                    "aws_s3_bucket.this[0]",
                                                    "aws_s3_bucket.this"
                                                ]
                                            },
                                            "sid": {
                                                "constant_value": "denyInsecureTransport"
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_bucket",
                                        "var.attach_deny_insecure_transport_policy"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.elb_log_delivery",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "elb_log_delivery",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "statement": [
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "s3:PutObject"
                                                ]
                                            },
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "principals": [
                                                {
                                                    "identifiers": {
                                                        "references": [
                                                            "data.aws_elb_service_account.this"
                                                        ]
                                                    },
                                                    "type": {
                                                        "constant_value": "AWS"
                                                    }
                                                }
                                            ],
                                            "resources": {
                                                "references": [
                                                    "aws_s3_bucket.this[0].arn",
                                                    "aws_s3_bucket.this[0]",
                                                    "aws_s3_bucket.this"
                                                ]
                                            },
                                            "sid": {
                                                "constant_value": ""
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_bucket",
                                        "var.attach_elb_log_delivery_policy"
                                    ]
                                }
                            }
                        ],
                        "variables": {
                            "acceleration_status": {
                                "default": null,
                                "description": "(Optional) Sets the accelerate configuration of an existing bucket. Can be Enabled or Suspended."
                            },
                            "acl": {
                                "default": "private",
                                "description": "(Optional) The canned ACL to apply. Defaults to 'private'. Conflicts with `grant`"
                            },
                            "attach_deny_insecure_transport_policy": {
                                "default": false,
                                "description": "Controls if S3 bucket should have deny non-SSL transport policy attached"
                            },
                            "attach_elb_log_delivery_policy": {
                                "default": false,
                                "description": "Controls if S3 bucket should have ELB log delivery policy attached"
                            },
                            "attach_policy": {
                                "default": false,
                                "description": "Controls if S3 bucket should have bucket policy attached (set to `true` to use value of `policy` as bucket policy)"
                            },
                            "attach_public_policy": {
                                "default": true,
                                "description": "Controls if a user defined public bucket policy will be attached (set to `false` to allow upstream to apply defaults to the bucket)"
                            },
                            "block_public_acls": {
                                "default": false,
                                "description": "Whether Amazon S3 should block public ACLs for this bucket."
                            },
                            "block_public_policy": {
                                "default": false,
                                "description": "Whether Amazon S3 should block public bucket policies for this bucket."
                            },
                            "bucket": {
                                "default": null,
                                "description": "(Optional, Forces new resource) The name of the bucket. If omitted, Terraform will assign a random, unique name."
                            },
                            "bucket_prefix": {
                                "default": null,
                                "description": "(Optional, Forces new resource) Creates a unique bucket name beginning with the specified prefix. Conflicts with bucket."
                            },
                            "cors_rule": {
                                "default": [],
                                "description": "List of maps containing rules for Cross-Origin Resource Sharing."
                            },
                            "create_bucket": {
                                "default": true,
                                "description": "Controls if S3 bucket should be created"
                            },
                            "force_destroy": {
                                "default": false,
                                "description": "(Optional, Default:false ) A boolean that indicates all objects should be deleted from the bucket so that the bucket can be destroyed without error. These objects are not recoverable."
                            },
                            "grant": {
                                "default": [],
                                "description": "An ACL policy grant. Conflicts with `acl`"
                            },
                            "ignore_public_acls": {
                                "default": false,
                                "description": "Whether Amazon S3 should ignore public ACLs for this bucket."
                            },
                            "lifecycle_rule": {
                                "default": [],
                                "description": "List of maps containing configuration of object lifecycle management."
                            },
                            "logging": {
                                "default": {},
                                "description": "Map containing access bucket logging configuration."
                            },
                            "object_lock_configuration": {
                                "default": {},
                                "description": "Map containing S3 object locking configuration."
                            },
                            "policy": {
                                "default": null,
                                "description": "(Optional) A valid bucket policy JSON document. Note that if the policy document is not specific enough (but still valid), Terraform may view the policy as constantly changing in a terraform plan. In this case, please make sure you use the verbose/specific version of the policy. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide."
                            },
                            "replication_configuration": {
                                "default": {},
                                "description": "Map containing cross-region replication configuration."
                            },
                            "request_payer": {
                                "default": null,
                                "description": "(Optional) Specifies who should bear the cost of Amazon S3 data transfer. Can be either BucketOwner or Requester. By default, the owner of the S3 bucket would incur the costs of any data transfer. See Requester Pays Buckets developer guide for more information."
                            },
                            "restrict_public_buckets": {
                                "default": false,
                                "description": "Whether Amazon S3 should restrict public bucket policies for this bucket."
                            },
                            "server_side_encryption_configuration": {
                                "default": {},
                                "description": "Map containing server-side encryption configuration."
                            },
                            "tags": {
                                "default": {},
                                "description": "(Optional) A mapping of tags to assign to the bucket."
                            },
                            "versioning": {
                                "default": {},
                                "description": "Map containing versioning configuration."
                            },
                            "website": {
                                "default": {},
                                "description": "Map containing static web-site hosting or redirect configuration."
                            }
                        }
                    }
                }
            },
            "variables": {
                "bucket_region": {
                    "default": "eu-central-1"
                },
                "s3_bucket_acl": {
                    "default": "public-read",
                    "sensitive": true
                },
                "s3_bucket_block_public_acls": {
                    "default": false
                },
                "s3_bucket_block_public_policy": {
                    "default": false
                },
                "s3_bucket_force_destroy": {
                    "default": true
                },
                "s3_bucket_ignore_public_acls": {
                    "default": false
                },
                "s3_bucket_restrict_public_buckets": {
                    "default": false
                },
                "s3_bucket_tags": {
                    "default": {
                        "Owner": "stackguardian"
                    },
                    "sensitive": true
                },
                "s3_bucket_versioning": {
                    "default": {
                        "enabled": "true",
                        "mfa_delete": "false"
                    }
                }
            }
        }
    },
    "relevant_attributes": [
        {
            "resource": "module.s3_bucket.aws_s3_bucket_policy.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.s3_bucket.aws_s3_bucket.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.s3_bucket.aws_s3_bucket.this",
            "attribute": []
        },
        {
            "resource": "random_pet.this",
            "attribute": [
                "id"
            ]
        }
    ]
}